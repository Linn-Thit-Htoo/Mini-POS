@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "_Layout";
    ViewData["Title"] = "Category Page";
    List<CategoryDataModel>? lst = TempData["lst"] as List<CategoryDataModel>;
}
<h1>Category Page</h1>

@if (lst != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Category ID</th>
                <th>Category Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (CategoryDataModel item in lst)
            {
                <tr>
                    <th>@item.CategoryId</th>
                    <td>@item.CategoryName</td>
                    <td>
                        <button class="btn btn-success text-white" onclick="btnEdit('@item.CategoryId')">Edit</button>
                        <button class="btn btn-danger text-white" onclick="btnDelete('@item.CategoryId')">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
<a href="/Category/Create">Create Category</a>

<script>

    function btnEdit(value) {
        var categoryID = parseInt(value);
        window.location.href = '/Category/Edit/' + categoryID;
    }

    function btnDelete(id) {
        if (confirm("Are you sure to delete?")) {
            fetch(`https://localhost:7087/api/Category?categoryID=${id}`, {
                method: "DELETE"
            }).then(response => {
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                // Check if the response is JSON
                const contentType = response.headers.get("content-type");
                if (contentType && contentType.includes("application/json")) {
                    return response.json();
                } else {
                    // If not JSON, return the response text
                    return response.text();
                }
            }).then(data => {
                alert(data);
                // Reload the page after successful deletion
                location.reload();
            }).catch(err => {
                console.error(err);
            })
        }
    }
</script>

